Better docs
	Breaking up the tutorial in pieces
	Explaining the different overloads and async methods available
	Try to include Readme instead of copying it
	BoostBook
	Automate the process
	Make undocumented enum values show (for collation)
License issues
    date
    gtest
CI tests for older compilers
    GCCs
    Clangs
    MSVCs
Multiresultset
	Text protocol
	Binary protocol (stored procedures)
Handshake
	compression
	SSL certificate & common name validation
	sha256_password
Usability
	Should make_error_code be public?
	Incomplete query reads: how does this affect further queries?
	Metadata in rows: being able to index by name
	Iterators for sync resultset iteration
	Timeouts
	Retries
	Connection pool
	Prepared statements: being able to specify how many rows to fetch from server (use cursors)
	Types
		Decimal
		Bit
		Geometry
	connection::run_sql that hides the resultset concept
    Option for separate compilation
    Reconnect cycle
        Ensure you can reconnect after a failed handshake/successful close
        Shutdown SSL stream
Other possible features
    CLIENT_SESSION_TRACK
    CLIENT_OPTIONAL_RESULTSET_METADATA
    Status flags accessors in resultset (for OK_Packet)
Technical debt
    Increase int serialization test coverage
    Increase DB version test coverage
    Conan for dependencies
    Tests for field_metadata::character_set
    Refactor database type cases, and remove unit tests superseeded by them
    Random input tests
    Change channel read to make less syscalls
	Test dashboard
	Sanitizers
	Integ tests for different default auth plugins
	Integ tests for not enough capabilities
	Integ tests for ssl_mode::enable and SSL not available
	Review convention in test names
	Review named_param
	Take fetch_many() algorithm out into network_algorithms (e.g. read_many_rows)
	Concept checking for StreamType
	Review valid() for moved-from resultsets (should it return always true?)
	Force the same number of values in each row as in fields()
	Rework deserialize_row_fn to allow cursors
	Test prepared statement binding to procedure out params
	More thorough testing for several NULLs in integration testing
	Query and statement tests for DELETEs
	prepared_statement::execute(): static_assert(), handle value&, const value&, anything convertible
	Test for too many connections
    Executor tests?
    Update date version to remove target_compile_definitions() for default completion tokens
