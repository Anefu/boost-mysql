#
# Copyright (c) 2019-2022 Ruben Perez Hidalgo (rubenperez038 at gmail dot com)
#
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#

import os ;
import sequence ;

alias test_common
    :
        /boost/mysql//mysql
        /boost/test//boost_unit_test_framework
    :
        <link>static
    :
    :
        <include>common
    ;


# Unit tests
lib unittests_entry_point
    :
        unit/entry_point.cpp
        test_common
    :
        <link>static
    ;

cpp-pch unittests_pch
    :
        unit/pch.hpp
        unittests_entry_point
    :
        <include>unit
    ;
unit-test boost_mysql_unittests
    :
        unittests_pch
        unittests_entry_point

        unit/detail/channel/read_buffer.cpp
        unit/detail/channel/message_parser.cpp
        unit/detail/channel/message_reader.cpp
        unit/detail/channel/message_writer_processor.cpp
        unit/detail/channel/message_writer.cpp
        unit/detail/auth/auth_calculator.cpp
        unit/detail/auxiliar/static_string.cpp
        unit/detail/auxiliar/rows_iterator.cpp
        unit/detail/auxiliar/field_type_traits.cpp
        unit/detail/auxiliar/datetime.cpp
        unit/detail/network_algorithms/read_one_row.cpp
        unit/detail/network_algorithms/read_some_rows.cpp
        unit/detail/network_algorithms/read_all_rows.cpp
        unit/detail/protocol/capabilities.cpp
        unit/detail/protocol/null_bitmap_traits.cpp
        unit/detail/protocol/serialization_test.cpp
        unit/detail/protocol/deserialize_text_field.cpp
        unit/detail/protocol/deserialize_binary_field.cpp
        unit/detail/protocol/deserialize_row.cpp
        unit/date.cpp
        unit/datetime.cpp
        unit/field_view.cpp
        unit/field.cpp
        unit/row_view.cpp
        unit/row.cpp
        unit/rows_view.cpp
        unit/rows.cpp
        unit/metadata.cpp
        unit/metadata_collection_view.cpp
        unit/error.cpp
        unit/statement.cpp
        unit/resultset.cpp
        unit/regressions.cpp
        unit/connection.cpp
    :
        <toolset>msvc:<cxxflags>-FI"pch.hpp" # https://github.com/boostorg/boost/issues/711
    ;


# Integration test filtering
local test_exclusions = "" ;
if [ os.environ BOOST_MYSQL_NO_UNIX_SOCKET_TESTS ] != "" {
    test_exclusions += "!@unix" ;
}
if [ os.environ BOOST_MYSQL_NO_SHA256_TESTS ] != "" {
    test_exclusions += "!@sha256" ;
}

local test_filter = [ sequence.join $(test_exclusions) : ":" ] ;

local test_command = "" ;
if $(test_filter) != "" {
    test_command = "-t $(test_filter)" ;
}

# Integration tests
lib integrationtests_entry_point :
        integration/entry_point.cpp
        test_common
    :
        <link>static
    ;

cpp-pch integrationtests_pch
    :
        integration/pch.hpp
        /boost/coroutine//boost_coroutine
        integrationtests_entry_point
    :
        <include>integration
    ;

unit-test boost_mysql_integrationtests
    :
        integrationtests_pch
        /boost/coroutine//boost_coroutine
        integrationtests_entry_point

        # Utilities
        integration/utils/src/get_endpoint.cpp
        integration/utils/src/metadata_validator.cpp
        integration/utils/src/network_result.cpp
        integration/utils/src/er_network_variant.cpp
        integration/utils/src/sync_errc.cpp
        integration/utils/src/sync_exc.cpp
        integration/utils/src/async_callback.cpp
        integration/utils/src/async_callback_noerrinfo.cpp
        integration/utils/src/async_future.cpp
        integration/utils/src/async_coroutine.cpp
        integration/utils/src/async_coroutinecpp20.cpp
        integration/utils/src/default_completion_tokens.cpp

        # Actual tests
        integration/connection.cpp
        integration/connect.cpp
        integration/handshake.cpp
        integration/query.cpp
        integration/prepare_statement.cpp
        integration/execute_statement.cpp
        integration/close_statement.cpp
        integration/statement_lifecycle.cpp
        integration/resultset.cpp
        integration/quit_connection.cpp
        integration/close_connection.cpp
        integration/reconnect.cpp
        integration/database_types.cpp
    :
        <testing.arg>$(test_command)
        <include>integration/utils/include
        <toolset>msvc:<cxxflags>-FI"pch.hpp" # https://github.com/boostorg/boost/issues/711
    ;

explicit boost_mysql_integrationtests ;
