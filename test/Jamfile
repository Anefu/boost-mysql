#
# Copyright (c) 2019-2020 Ruben Perez Hidalgo (rubenperez038 at gmail dot com)
#
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#

import os ;

if [ os.environ BOOST_MYSQL_SHA256_TESTS ]
{
    GTEST_FILTER = "*" ;
}
else
{
    GTEST_FILTER = "-*RequiresSha256*" ;
}


alias boost_mysql_test
    :
        /boost/mysql//boost_mysql
        /user-config//gtest
        /user-config//gmock
        common/test_main.cpp
    :
    :
    :
        <include>common
    ;

unit-test boost_mysql_unittests 
    : 
        boost_mysql_test
        unit/detail/auxiliar/static_string.cpp
        unit/detail/auth/auth_calculator.cpp
        unit/detail/protocol/serialization_test_common.cpp
        unit/detail/protocol/serialization.cpp
        unit/detail/protocol/common_messages.cpp
        unit/detail/protocol/handshake_messages.cpp
        unit/detail/protocol/query_messages.cpp
        unit/detail/protocol/prepared_statement_messages.cpp
        unit/detail/protocol/capabilities.cpp
        unit/detail/protocol/text_deserialization_value.cpp
        unit/detail/protocol/text_deserialization_error.cpp
        unit/detail/protocol/binary_deserialization_value.cpp
        unit/detail/protocol/binary_deserialization_error.cpp
        unit/detail/protocol/row_deserialization.cpp
        unit/detail/protocol/binary_serialization.cpp
        unit/detail/protocol/null_bitmap_traits.cpp
        unit/detail/protocol/channel.cpp
        unit/metadata.cpp
        unit/value.cpp
        unit/row.cpp
        unit/error.cpp
        unit/prepared_statement.cpp
        unit/resultset.cpp
        unit/connection.cpp
    ;
    
unit-test boost_mysql_integrationtests 
    :
        boost_mysql_test
        /boost/coroutine//boost_coroutine
        integration/network_functions/network_functions_impl.cpp
        integration/network_functions/sync.cpp
        integration/network_functions/async_callback.cpp
        integration/network_functions/async_coroutine.cpp
        integration/network_functions/async_coroutinecpp20.cpp
        integration/network_functions/async_future.cpp
        integration/metadata_validator.cpp
        integration/connection.cpp
        integration/connect.cpp
        integration/handshake.cpp
        integration/query.cpp
        integration/prepare_statement.cpp
        integration/execute_statement.cpp
        integration/close_statement.cpp
        integration/resultset.cpp
        integration/prepared_statement_lifecycle.cpp
        integration/database_types.cpp
        integration/quit_connection.cpp
        integration/close_connection.cpp
    :
        <testing.arg>"--gtest_filter=$(GTEST_FILTER)"
    ;
    
build-project ../example ;

